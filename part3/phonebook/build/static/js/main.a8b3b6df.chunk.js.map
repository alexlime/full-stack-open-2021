{"version":3,"sources":["services/persons.js","components/Notification.js","components/Persons.js","components/Filter.js","components/PersonForm.js","App.js","index.js"],"names":["baseUrl","noteServises","getAll","request","axios","get","nonExisting","name","number","id","then","response","data","concat","create","newObject","post","update","put","del","delete","Notification","text","notificationColor","color","className","style","Persons","persons","deletePerson","map","eachPerson","onClick","Filter","label","value","handle","onChange","PersonForm","onSubmit","inputs","i","type","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchName","setNewSearchName","notification","setNotification","useEffect","personsService","allPersons","catch","error","console","log","personsToShow","filter","toLowerCase","includes","formInputs","event","target","preventDefault","person","find","confirmString","newPerson","undefined","returnedPerson","setTimeout","err","window","confirm","p","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8b3b6df.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'api/persons'\n\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n          name: \"ERROR\",\n          number: \"12-43-234345\",\n          id: 1000\n        }\n  return request.then(response => response.data.concat(nonExisting))\n  // return request.then(response => response.data)\n}  \n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nconst noteServises = {getAll, create, update, del}\n\nexport default noteServises","\n\nconst Notification = ({text, color}) => {\n  const notificationColor = {\n    color: color\n  }\n  if (text === null) {\n    return null\n  }\n  return (\n    <div className='notification' style={notificationColor}>\n      {text}\n    </div>\n\n  )\n}\n\nexport default Notification","const Persons = ({persons, deletePerson}) => {\n  return (\n    <ul>\n      {persons.map(eachPerson =>\n        <li key={eachPerson.name}> \n          {eachPerson.name} {eachPerson.number}\n          <button onClick={() => deletePerson(eachPerson.id)}>\n            delete\n          </button>\n        </li>\n      )}\n    </ul>   \n  )\n}\n\nexport default Persons\n\n\n","const Filter = ({label, value, handle}) => {\n  return (\n    <div>\n      <label>\n        {label}\n        <input value={value} onChange={handle} />\n      </label>\n    </div>\n  )\n}\n\nexport default Filter","const PersonForm = ({onSubmit, inputs}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      {inputs.map(i =>\n        <div key={i.label}>\n          <label>\n            {i.label}\n            <input value={i.value} onChange={i.onChange} />\n          </label>\n        </div>\n      )}\n      <div>\n      <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React, { useState, useEffect } from 'react'\n// import axios from 'axios'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport './index.css'\n\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchName, setNewSearchName ] = useState('')\n  const [notification, setNotification] = useState({\n    text: null,\n    color: 'green' \n  })\n\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(allPersons => {\n        setPersons(allPersons)\n      })\n      .catch(error => {\n        console.log('fail')\n      })\n  },[])\n\n\n  /* If value received from search input \n     then filter persons list */\n  const personsToShow = searchName\n    ? persons.filter(i => (\n        i.name\n          .toLowerCase()\n          .includes(searchName.toLowerCase()))\n      )\n    : persons\n\n\n  const handleName = (event) => {\n    setNewName(event.target.value)\n  }\n\n\n  const handleNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n\n  const handleSearch = (event) => {\n    setNewSearchName(event.target.value)\n  }\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const person = persons.find(person => person.name === newName)\n    const confirmString = `${newName} is already added to phonebook, replace the old number with the new one?`\n    const newPerson = { \n      name: newName,\n      number: newNumber\n    }\n\n    if (person === undefined) {\n      // No person exist, Add new\n      personsService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson)) \n          setNotification({...notification, text: `Added ${newPerson.name}`})\n          setTimeout(() => {\n            setNotification({...notification, text: null})\n          }, 4000)\n        })\n        .catch(err => { // Handle server validation error 400 ex3.19\n          console.log(err.response.data.error)\n            setNotification({\n              text: err.response.data.error,\n              color: 'red'\n            })\n            setTimeout(() => {\n              setNotification({...notification, text: null})\n            }, 4000)\n        })\n    } \n    else {\n      // Person exists, ask to update\n      if (window.confirm(confirmString)) {\n        personsService\n          .update(person.id, newPerson) \n          .then(returnedPerson => { \n            setPersons(persons.filter(p => p !== person).concat(returnedPerson))\n            setNotification({...notification, text:`Updated ${newPerson.name}`})\n            setTimeout(() => {\n              setNotification({...notification, text: null})\n            }, 4000)\n          })\n          .catch(error => { \n            console.log(error.response.data.error)\n            setNotification({\n              text: `Information of ${newPerson.name} has already been removed from server`,\n              color: 'red'\n            })\n            setTimeout(() => {\n              setNotification({...notification, text: null})\n            }, 4000)\n            setPersons(persons.filter(p => p !== person))\n          })\n      }\n    }\n    setNewName('') \n    setNewNumber('') \n  }\n\n\n  const deletePerson = (id) => {\n    /* delete person, if person doesn't exist show alert and rerender */\n    const personToDelete = persons.find(p => p.id === id)\n    const confirmString = `Do you really want to delete ${personToDelete.name} from the Phonebook?`\n\n    if (window.confirm(confirmString)) {\n      personsService\n        .del(id)\n        .then( () => {\n          setPersons(persons.filter(p => p.id !== id)) \n          setNotification({...notification, text: `Deleted: ${personToDelete.name}`})\n          setTimeout(() => {\n            setNotification({...notification, text: null})\n          }, 4000)\n        })\n        .catch(error => { \n          console.log(`${personToDelete.name} has not been found on server, rerender...`)\n          setPersons(persons.filter(p => p.id !== id)) \n        }) \n    }\n  }\n\n\n  // passed to PersonForm component inputs\n  const formInputs = [\n    {label: \"names: \", value: newName, onChange: handleName},\n    {label: \"numbers: \", value: newNumber, onChange: handleNumber}\n  ]\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification text={notification.text} color={notification.color} />\n      <Filter \n        label=\"filter persons: \"\n        value={searchName} \n        handle={handleSearch} \n      />\n\n      <h2>Add new person</h2>\n\n      <PersonForm \n        inputs={formInputs}\n        onSubmit={addPerson}\n      />\n\n      <h2>Numbers</h2>\n      <Persons \n        persons={personsToShow} \n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}